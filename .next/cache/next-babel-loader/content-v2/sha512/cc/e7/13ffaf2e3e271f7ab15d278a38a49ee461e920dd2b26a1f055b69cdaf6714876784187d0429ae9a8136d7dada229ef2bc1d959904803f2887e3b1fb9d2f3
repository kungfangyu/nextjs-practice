{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fangyugong/Desktop/react-course-2021/next-js-practice/pages/[meetupId]/index.js\";\n\n/*\n * @Date: 2021-10-18 13:46:41\n * @LastEditors: Fane Kung\n * @LastEditTime: 2021-10-22 11:46:31\n * @FilePath: /next-js-practice/pages/[meetupId]/index.js\n */\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/fangyugong/Desktop/react-course-2021/next-js-practice/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AAwET,eAAeA,aAAf","sourcesContent":["/*\n * @Date: 2021-10-18 13:46:41\n * @LastEditors: Fane Kung\n * @LastEditTime: 2021-10-22 11:46:31\n * @FilePath: /next-js-practice/pages/[meetupId]/index.js\n */\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail \n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n\n  const client = await MongoClient.connect('mongodb+srv://Fane:ATFDyq3JQ0bkTuiN@cluster0.9rbz6.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups'); \n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray(); \n  //find => 這裡的第一個空物件代表要找的數據沒有過濾條件，就是全部的對象都要,第二個參數代表哪些數需要被提取出來\n  //id設置為1代表只包含id沒有其他字段值\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({ params: {meetupId: meetup._id.toString()} }))\n    \n    // [\n    //   {\n    //     params: {\n    //       meetupId: 'm1'\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: 'm1'\n    //     },\n    //   }\n    // ]\n  }\n}\n\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect('mongodb+srv://Fane:ATFDyq3JQ0bkTuiN@cluster0.9rbz6.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups'); \n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) }); //ObjectId將id轉為字串\n\n  client.close();\n\n  console.log(selectedMeetup)\n  return {\n    props: {\n      meetupsData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    },\n    revalidate: 10\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}